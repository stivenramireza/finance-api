version: "3.1"

services:
  api:
    container_name: finance-api
    image: stivenramireza/finance-api:1.0.0
    ports:
      - 8000:8000
    networks:
      - finance
    depends_on:
      - postgres-db
      - redis-db
    environment:
      ENV: ${ENV}
      URL: ${URL}
      POSTGRES_HOST: postgres-db
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_SCHEMA: ${POSTGRES_SCHEMA}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      REDIS_HOST: redis-db
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      JWT_PRIVATE_KEY: ${JWT_PRIVATE_KEY}
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY}
      TRAVEL_ADVISOR_API_URL: ${TRAVEL_ADVISOR_API_URL}
      TRAVEL_ADVISOR_API_KEY: ${TRAVEL_ADVISOR_API_KEY}
      TRAVEL_ADVISOR_HOST: ${TRAVEL_ADVISOR_HOST}

  postgres-db:
    container_name: postgres-db
    image: postgres:14
    ports:
      - 5432:5432
    networks:
      - finance
    volumes:
      - postgres-db-data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_DB: ${POSTGRES_SCHEMA}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata

  redis-db:
    container_name: redis-db
    image: redis:7-alpine
    ports:
      - 6379:6379
    networks:
      - finance
    volumes:
      - redis-db-data:/data
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}

networks:
  finance:

volumes:
  postgres-db-data:
    driver: local
  redis-db-data:
    driver: local
